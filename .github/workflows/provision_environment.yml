name: Provision Environment on Issue Open
run-name: Provision Environment on Issue ${{ github.event.issue.number }} for ${{ github.actor }}
on:
  issues:
    types: [opened]

jobs:
  provision:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Check if issue is an environment request
        if: contains(github.event.issue.labels.*.name, 'environment-request')
        run: echo "Environment request detected"

      - name: Comment on Issue to Indicate Provisioning
        run: |
          run_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          comment="⚙️ Demo Environment request processing started...\n\nActions workflow extracting the demo definition run can be accessed from [here]($run_url)."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"$comment\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
            
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Azure CLI with Azure Login v2
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Parse Issue Details
        id: parse_issue
        run: |
          body="${{ github.event.issue.body }}"
          app_name=$(echo "$body" | awk '/>>app_name<</{getline; getline; print}')
          region=$(echo "$body" | awk '/>>region<</{getline; getline; print}')
          additional_notes=$(echo "$body" | awk '/>>additional_notes<</{getline; getline; print}')
          echo "app_name=$app_name" >> $GITHUB_ENV
          echo "region=$region" >> $GITHUB_ENV

          if [[ -z "$app_name" || -z "$region" ]]; then
            echo "Error: Failed to parse issue details." >&2
            exit 1
          fi
      
          unique_id="${{ github.event.issue.number }}-$(date +%s)"
          resource_group_name="env-$app_name-$unique_id-rg"

          echo "unique_id=$unique_id" >> $GITHUB_ENV
          echo "resource_group_name=$resource_group_name" >> $GITHUB_ENV
          echo "additional_notes=$additional_notes" >> $GITHUB_ENV

      - name: Create Resource Group with Tags
        run: |
          az group create --name "${{ env.resource_group_name }}" --location "${{ env.region }}" \
            --tags "Created by=${{ github.actor }}" \
                   "Issue ID=https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}" \
                   "Creation time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                   "App=${{ env.app_name }}" \
                   "Environment=development"

      - name: Deploy ARM Template
        id: deploy_template
        run: |
          output=$(az deployment group create --resource-group "${{ env.resource_group_name }}" \
            --template-file template.json \
            --parameters location=${{ env.region }} \
                        appServicePlanName="appService-${{ env.unique_id }}" \
                        webAppName="${{ env.app_name }}-${{ env.unique_id }}" \
            --query "properties.outputs.webAppUrl.value" -o tsv)
          echo "webAppUrl=$output" >> $GITHUB_ENV

      - name: Comment on Issue to Indicate Completion
        run: |
          run_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          comment="✅ Demo Environment request processing completed...\n\nResource group name: `${{ env.resource_group_name }}`\nWeb App URL: [${{ env.webAppUrl }}](${ env.webAppUrl })"
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"$comment\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
