name: Provision Environment on Issue Open
run-name: Provision Environment on Issue ${{ github.event.issue.number }}
on:
  issues:
    types: [opened]

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
      - name: Check if issue is an environment request
        if: contains(github.event.issue.labels.*.name, 'environment-request')
        run: echo "Environment request detected"

      - name: Comment on Issue to Indicate Provisioning
        run: |
          run_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          comment="⚙️ Demo Environment request processing started...\n\n[Actions workflow extracting the demo definition run can be accessed from here]($run_url)."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"$comment\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"

      - name: Set up Azure CLI with Azure Login v2
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Parse Issue Details
        id: parse_issue
        run: |
          # Extract fields from the issue body using awk and handle empty lines
          app_name=$(echo "${{ github.event.issue.body }}" | awk -v RS="\n\n" '/### >>app_name<</ {getline; getline; print $0}' | xargs | tr -cd '[:alnum:]-_.()')
          region=$(echo "${{ github.event.issue.body }}" | awk -v RS="\n\n" '/### >>region<</ {getline; getline; print $0}' | xargs | tr -cd '[:alnum:]-_.()')
          additional_notes=$(echo "${{ github.event.issue.body }}" | awk -v RS="\n\n" '/### >>additional_notes<</ {getline; getline; print $0}' | xargs)

          # Validate that app_name and region are non-empty
          if [[ -z "$app_name" || -z "$region" ]]; then
            echo "Error: Failed to parse issue details." >&2
            exit 1
          fi
      
          # Generate unique ID based on issue number and timestamp
          unique_id="${{ github.event.issue.number }}-$(date +%s)"
          
      
          # Create resource group name compliant with Azure restrictions
          resource_group_name="env-$app_name-$unique_id-rg"
      
          # Set environment variables
          echo "app_name=$app_name" >> $GITHUB_ENV
          echo "region=$region" >> $GITHUB_ENV
          echo "unique_id=$unique_id" >> $GITHUB_ENV
          echo "resource_group_name=$resource_group_name" >> $GITHUB_ENV
          echo "additional_notes=$additional_notes" >> $GITHUB_ENV

          
      - name: Create Resource Group with Tags
        run: |
          az group create --name "${{ env.resource_group_name }}" --location "${{ env.region }}" \
            --tags "Created by=${{ github.actor }}" \
                   "Issue ID=https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}" \
                   "Creation time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                   "App=${{ env.app_name }}" \
                   "Environment=development"
        continue-on-error: true

      # Additional deployment steps...
