name: Provision Environment on Issue Open
on:
  issues:
    types: [opened]

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
      - name: Check if issue is an environment request
        if: contains(github.event.issue.labels.*.name, 'environment-request')
        run: echo "Environment request detected"

      - name: Set up Azure CLI with Azure Login v2
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Parse Issue Details
        id: parse_issue
        run: |
          # Extract app_name and region directly from the form-based issue body fields
          app_name="${{ github.event.issue.body.app_name }}"
          region="${{ github.event.issue.body.region }}"
          
          # Generate unique ID based on issue number and timestamp
          unique_id="${{ github.event.issue.number }}-$(date +%s)"
          
          # Set environment variables if values are extracted successfully
          if [[ -n "$app_name" && -n "$region" ]]; then
            echo "app_name=$app_name" >> $GITHUB_ENV
            echo "region=$region" >> $GITHUB_ENV
            echo "unique_id=$unique_id" >> $GITHUB_ENV
            echo "resource_group_name=env-$app_name-$unique_id-rg" >> $GITHUB_ENV
          else
            echo "Error: Failed to parse issue details." >&2
            exit 1
          fi

      - name: Create Resource Group with Tags
        run: |
          az group create --name "${{ env.resource_group_name }}" --location "${{ env.region }}" \
            --tags "Created by=${{ github.actor }}" \
                   "Issue ID=https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}" \
                   "Creation time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                   "App=${{ env.app_name }}" \
                   "Environment=development"
        continue-on-error: true

      - name: Deploy Application Infrastructure
        env:
          RESOURCE_GROUP: ${{ env.resource_group_name }}
          REGION: ${{ env.region }}
          UNIQUE_ID: ${{ env.unique_id }}
        run: |
          az deployment group create --resource-group "${{ env.RESOURCE_GROUP }}" \
            --template-file template.json \
            --parameters location=${{ env.REGION }} \
                        appServicePlanName="appService-${{ env.UNIQUE_ID }}" \
                        webAppName="webapp-${{ env.UNIQUE_ID }}"

      - name: Get Application URL
        id: get_app_url
        run: |
          APP_URL=$(az webapp show --name "webapp-${{ env.unique_id }}" --resource-group "${{ env.resource_group_name }}" --query defaultHostName -o tsv)
          echo "APP_URL=${APP_URL}" >> $GITHUB_ENV

      - name: Comment on Issue with Environment Details
        run: |
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"body": "Environment for `${{ env.app_name }}` is ready! Access it [here](http://${{ env.APP_URL }})"}' \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments"
